import{_ as l,p as i,q as t,a1 as e}from"./framework-69837a10.js";const r={},g=e(`<h1 id="linux-rpm命令" tabindex="-1"><a class="header-anchor" href="#linux-rpm命令" aria-hidden="true">#</a> Linux rpm命令</h1><p>Linux rpm 命令用于管理套件。</p><p>rpm（英文全拼：redhat package manager） 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rpm [-acdhilqRsv][-b&lt;完成阶段&gt;&lt;套间档&gt;+][-e&lt;套件挡&gt;][-f&lt;文件&gt;+][-i&lt;套件档&gt;][-p&lt;套件档&gt;＋][-U&lt;套件档&gt;][-vv][--addsign&lt;套件档&gt;+][--allfiles][--allmatches][--badreloc][--buildroot&lt;根目录&gt;][--changelog][--checksig&lt;套件档&gt;+][--clean][--dbpath&lt;数据库目录&gt;][--dump][--excludedocs][--excludepath&lt;排除目录&gt;][--force][--ftpproxy&lt;主机名称或IP地址&gt;][--ftpport&lt;通信端口&gt;][--help][--httpproxy&lt;主机名称或IP地址&gt;][--httpport&lt;通信端口&gt;][--ignorearch][--ignoreos][--ignoresize][--includedocs][--initdb][justdb][--nobulid][--nodeps][--nofiles][--nogpg][--nomd5][--nopgp][--noorder][--noscripts][--notriggers][--oldpackage][--percent][--pipe&lt;执行指令&gt;][--prefix&lt;目的目录&gt;][--provides][--queryformat&lt;档头格式&gt;][--querytags][--rcfile&lt;配置档&gt;][--rebulid&lt;套件档&gt;][--rebuliddb][--recompile&lt;套件档&gt;][--relocate&lt;原目录&gt;=&lt;新目录&gt;][--replacefiles][--replacepkgs][--requires][--resign&lt;套件档&gt;+][--rmsource][--rmsource&lt;文件&gt;][--root&lt;根目录&gt;][--scripts][--setperms][--setugids][--short-circuit][--sign][--target=&lt;安装平台&gt;+][--test][--timecheck&lt;检查秒数&gt;][--triggeredby&lt;套件档&gt;][--triggers][--verify][--version][--whatprovides&lt;功能特性&gt;][--whatrequires&lt;功能特性&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h3><ul><li>-a 　查询所有套件。</li><li>-b&lt;完成阶段&gt;&lt;套件档&gt;+或-t &lt;完成阶段&gt;&lt;套件档&gt;+ 　设置包装套件的完成阶段，并指定套件档的文件名称。</li><li>-c 　只列出组态配置文件，本参数需配合&quot;-l&quot;参数使用。</li><li>-d 　只列出文本文件，本参数需配合&quot;-l&quot;参数使用。</li><li>-e&lt;套件档&gt;或--erase&lt;套件档&gt; 　删除指定的套件。</li><li>-f&lt;文件&gt;+ 　查询拥有指定文件的套件。</li><li>-h或--hash 　套件安装时列出标记。</li><li>-i 　显示套件的相关信息。</li><li>-i&lt;套件档&gt;或--install&lt;套件档&gt; 　安装指定的套件档。</li><li>-l 　显示套件的文件列表。</li><li>-p&lt;套件档&gt;+ 　查询指定的RPM套件档。</li><li>-q 　使用询问模式，当遇到任何问题时，rpm指令会先询问用户。</li><li>-R 　显示套件的关联性信息。</li><li>-s 　显示文件状态，本参数需配合&quot;-l&quot;参数使用。</li><li>-U&lt;套件档&gt;或--upgrade&lt;套件档&gt; 升级指定的套件档。</li><li>-v 　显示指令执行过程。</li><li>-vv 　详细显示指令执行过程，便于排错。</li><li>-addsign&lt;套件档&gt;+ 　在指定的套件里加上新的签名认证。</li><li>--allfiles 　安装所有文件。</li><li>--allmatches 　删除符合指定的套件所包含的文件。</li><li>--badreloc 　发生错误时，重新配置文件。</li><li>--buildroot&lt;根目录&gt; 　设置产生套件时，欲当作根目录的目录。</li><li>--changelog 　显示套件的更改记录。</li><li>--checksig&lt;套件档&gt;+ 　检验该套件的签名认证。</li><li>--clean 　完成套件的包装后，删除包装过程中所建立的目录。</li><li>--dbpath&lt;数据库目录&gt; 　设置欲存放RPM数据库的目录。</li><li>--dump 　显示每个文件的验证信息。本参数需配合&quot;-l&quot;参数使用。</li><li>--excludedocs 　安装套件时，不要安装文件。</li><li>--excludepath&lt;排除目录&gt; 　忽略在指定目录里的所有文件。</li><li>--force 　强行置换套件或文件。</li><li>--ftpproxy&lt;主机名称或IP地址&gt; 　指定FTP代理服务器。</li><li>--ftpport&lt;通信端口&gt; 　设置FTP服务器或代理服务器使用的通信端口。</li><li>--help 　在线帮助。</li><li>--httpproxy&lt;主机名称或IP地址&gt; 　指定HTTP代理服务器。</li><li>--httpport&lt;通信端口&gt; 　设置HTTP服务器或代理服务器使用的通信端口。</li><li>--ignorearch 　不验证套件档的结构正确性。</li><li>--ignoreos 　不验证套件档的结构正确性。</li><li>--ignoresize 　安装前不检查磁盘空间是否足够。</li><li>--includedocs 　安装套件时，一并安装文件。</li><li>--initdb 　确认有正确的数据库可以使用。</li><li>--justdb 　更新数据库，当不变动任何文件。</li><li>--nobulid 　不执行任何完成阶段。</li><li>--nodeps 　不验证套件档的相互关联性。</li><li>--nofiles 　不验证文件的属性。</li><li>--nogpg 　略过所有GPG的签名认证。</li><li>--nomd5 　不使用MD5编码演算确认文件的大小与正确性。</li><li>--nopgp 　略过所有PGP的签名认证。</li><li>--noorder 　不重新编排套件的安装顺序，以便满足其彼此间的关联性。</li><li>--noscripts 　不执行任何安装Script文件。</li><li>--notriggers 　不执行该套件包装内的任何Script文件。</li><li>--oldpackage 　升级成旧版本的套件。</li><li>--percent 　安装套件时显示完成度百分比。</li><li>--pipe&lt;执行指令&gt; 　建立管道，把输出结果转为该执行指令的输入数据。</li><li>--prefix&lt;目的目录&gt; 　若重新配置文件，就把文件放到指定的目录下。</li><li>--provides 　查询该套件所提供的兼容度。</li><li>--queryformat&lt;档头格式&gt; 　设置档头的表示方式。</li><li>--querytags 　列出可用于档头格式的标签。</li><li>--rcfile&lt;配置文件&gt; 　使用指定的配置文件。</li><li>--rebulid&lt;套件档&gt; 　安装原始代码套件，重新产生二进制文件的套件。</li><li>--rebuliddb 　以现有的数据库为主，重建一份数据库。</li><li>--recompile&lt;套件档&gt; 　此参数的效果和指定&quot;--rebulid&quot;参数类似，当不产生套件档。</li><li>--relocate&lt;原目录&gt;=&lt;新目录&gt; 　把本来会放到原目录下的文件改放到新目录。</li><li>--replacefiles 　强行置换文件。</li><li>--replacepkgs 　强行置换套件。</li><li>--requires 　查询该套件所需要的兼容度。</li><li>--resing&lt;套件档&gt;+ 　删除现有认证，重新产生签名认证。</li><li>--rmsource 　完成套件的包装后，删除原始代码。</li><li>--rmsource&lt;文件&gt; 　删除原始代码和指定的文件。</li><li>--root&lt;根目录&gt; 　设置欲当作根目录的目录。</li><li>--scripts 　列出安装套件的Script的变量。</li><li>--setperms 　设置文件的权限。</li><li>--setugids 　设置文件的拥有者和所属群组。</li><li>--short-circuit 　直接略过指定完成阶段的步骤。</li><li>--sign 　产生PGP或GPG的签名认证。</li><li>--target=&lt;安装平台&gt;+ 　设置产生的套件的安装平台。</li><li>--test 　仅作测试，并不真的安装套件。</li><li>--timecheck&lt;检查秒数&gt; 　设置检查时间的计时秒数。</li><li>--triggeredby&lt;套件档&gt; 　查询该套件的包装者。</li><li>--triggers 　展示套件档内的包装Script。</li><li>--verify 　此参数的效果和指定&quot;-q&quot;参数相同。</li><li>--version 　显示版本信息。</li><li>--whatprovides&lt;功能特性&gt; 　查询该套件对指定的功能特性所提供的兼容度。</li><li>--whatrequires&lt;功能特性&gt; 　查询该套件对指定的功能特性所需要的兼容度</li></ul>`,7),o=[g];function s(a,c){return i(),t("div",null,o)}const p=l(r,[["render",s],["__file","cmd.html.vue"]]);export{p as default};
