import{_ as e,p as a,q as i,a1 as r}from"./framework-69837a10.js";const h={},d=r('<h1 id="浏览器页面渲染过程" tabindex="-1"><a class="header-anchor" href="#浏览器页面渲染过程" aria-hidden="true">#</a> 浏览器页面渲染过程</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>浏览器内核是支持浏览器运行的核心程序，分为两部分：渲染引擎和JS引擎。</p><p>渲染引擎在不同浏览器上存在区别，目前市面上常见的浏览器内核分为：</p><ul><li>Trident(IE)</li><li>Gecko(火狐)</li><li>Blink(Chrome、Opera)</li><li>Webkit(Safari)</li></ul><p>Webkit是当下浏览器世界的霸主，主要以Webkit为例子，做现代浏览器渲染过程分析。</p><h2 id="涉及知识点" tabindex="-1"><a class="header-anchor" href="#涉及知识点" aria-hidden="true">#</a> 涉及知识点</h2><h2 id="页面加载过程" tabindex="-1"><a class="header-anchor" href="#页面加载过程" aria-hidden="true">#</a> 页面加载过程</h2><p>先大致整理一下访问页面到页面展示出来的过程：</p><ul><li>浏览器将请求的URL交给DNS服务器解析，得到域名的IP地址</li><li>向这个IP地址的机器发生HTTP(s)请求</li><li>服务器收到、处理并返回HTTP请求</li><li>浏览器得到返回内容渲染成页面</li></ul><h2 id="将过程细分" tabindex="-1"><a class="header-anchor" href="#将过程细分" aria-hidden="true">#</a> 将过程细分：</h2>',11),l=[d];function t(n,c){return a(),i("div",null,l)}const o=e(h,[["render",t],["__file","pageRender.html.vue"]]);export{o as default};
