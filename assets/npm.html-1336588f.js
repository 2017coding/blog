import{_ as s,M as t,p as o,q as d,R as e,t as n,N as i,Q as r,a1 as a}from"./framework-69837a10.js";const p="/blog/assets/package-10ea9e5f.png",c={},u=e("h1",{id:"npm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#npm","aria-hidden":"true"},"#"),n(" npm")],-1),m=e("h2",{id:"npm是什么",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#npm是什么","aria-hidden":"true"},"#"),n(" npm是什么")],-1),h=e("p",null,"npm的全称是Node Package Manager，是一个NodeJS包管理和分发工具，已经成为了非官方的发布Node模块（包）的标准。",-1),g=e("p",null,"npm由三个不同的组件组成：",-1),v={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://nodejs.cn/npm/cli/v8/commands/npm/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://nodejs.cn/npm/cli/v8/using-npm/registry/",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"package-json",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#package-json","aria-hidden":"true"},"#"),n(" package.json")],-1),x=e("p",null,"每个JavaScript项目都可以被当作npm软件包，并且通过package.json来描述项目和软件包的信息，所以package.json是工程化项目必要的一个部分。",-1),f=e("p",null,[n("当使用"),e("code",null,"npm init"),n("初始化JavaScript/Node.js项目的时候，会自动生成该文件： "),e("img",{src:p,style:{width:"80%",padding:"20px"}})],-1),j=e("p",null,"主要属性：",-1),R=a("<li>name：项目或者库的名称</li><li>version：项目的版本</li><li>description：项目的描述</li><li>main：项目入口文件</li><li>scripts：</li><li>author：项目作者</li><li>license：项目的许可证</li><li>dependencies：生产环境需要的依赖，比如vue，vue-router，这些被编译后依旧需要引入才能项目才能运行的依赖</li><li>devDependencies：开发环境需要的依赖，比如babel，eslint，husky等工具</li><li>...</li>",10),E={href:"https://nodejs.cn/npm/cli/v9/configuring-npm/package-json/",target:"_blank",rel:"noopener noreferrer"},y=a(`<h3 id="package-lock-json" tabindex="-1"><a class="header-anchor" href="#package-lock-json" aria-hidden="true">#</a> package-lock.json</h3><p>对于npm修改node_modules树或package.json的任何操作，都会自动生成package-lock.json。它描述了生成的确切树，以便安装能够生成相同的树。 比如我们设置版本为:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;lint-staged&quot;: &quot;^13.1.2&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当前安装的时候 13.1.2为最高版本，则在package-lock.json中生成以后，后续安装都会根据package-lock.json中的版本进行安装，如果需要安装最新版本则需要删除package-lock.json文件重新进行安装。</p><p>package-lock.json旨在提交到代码库中，并用于各种目的：</p><ul><li>描述依赖关系树的单一表示，以保证团队成员、部署和持续集成安装完全相同的依赖关系。</li><li>为&quot;time-travel&quot;的用户提供一种工具，使其无需提交目录本身即可进入node_modeles的先前状态</li><li>通过可读的源代码控制差异促进树变化的更大可见性</li><li>通过允许npm跳过以前安装的包的重复元数据解析来优化安装过程。</li></ul><h2 id="发布到npm" tabindex="-1"><a class="header-anchor" href="#发布到npm" aria-hidden="true">#</a> 发布到npm</h2><p>发布一个npm包应当遵循以下的步骤：</p>`,8),N=e("li",null,[e("p",null,"创建好你的项目"),e("ul",null,[e("li",null,"npm init/npm init -y 初始化项目"),e("li",null,"配置好package.json文件"),e("li",null,"配置好你的入口文件"),e("li",null,"编写完成你的项目相关代码"),e("li",null,"创建一个README.md文件描述你的项目内容")])],-1),q={href:"https://www.npmjs.com/signup",target:"_blank",rel:"noopener noreferrer"},w=e("li",null,[e("p",null,"登陆npm（npm login）")],-1),P=e("li",null,[e("p",null,"发布包（npm publish）")],-1),T=e("li",null,[e("p",null,"删除包（npm unpublish <包名> -fource）")],-1),V=a(`<p>删除时需要注意的问题:</p><ol><li>npm unpublish 只能删除<code>72小时以内</code>发布的包</li><li>npm unpublish 删除的包，在<code>24小时内</code>不允许重复发布</li><li>发布包的时候需要慎重，尽量不要发布没有意义的包</li></ol><h3 id="发布常见问题" tabindex="-1"><a class="header-anchor" href="#发布常见问题" aria-hidden="true">#</a> 发布常见问题</h3><ol><li>提示没有权限</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>403 Forbidden - PUT https://registry.npmjs.org/package-name - You do not have permission to publish &quot;package-name&quot;. Are you logged in as the correct user?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种一般是这个包名已经存在，去npm官网搜一下想要创建的名字，不存在的话则可以发布成功</p><ol start="2"><li>需要登陆</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm ERR! code ENEEDAUTH
npm ERR! need auth auth required for publishing
npm ERR! need auth You need to authorize this machine using \`npm adduser\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后面已经注明了，输入npm adduser重新登录就可以了，过程和npm login一样，这个问题在你切换了 npm 源之后或登录过期后都有可能发生</p><ol start="3"><li>只有管理员才有权限发布</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm ERR! publish Failed PUT 403
npm ERR! code E403
npm ERR! [no_perms] Private mode enable, only admin can publish this module [no_perms] Private mode enable, only admin can publish this module: your-package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个是你的源设置成第三方源的时候才有可能发生，比如设置了淘宝源就可能会导致该问题。只要把源改回默认的就可以了，如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm config set registry http://registry.npmjs.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>无法发布到私有包</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm ERR! publish Failed PUT 402
npm ERR! code E402
npm ERR! You must sign up for private packages :
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个当你的包名为@your-name/your-package时才会出现，原因是当包名以@your-name开头时，npm publish会默认发布为私有包，但是 npm 的私有包需要付费，所以需要添加如下参数进行发布:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm publish --access public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17);function S(U,A){const l=t("ExternalLinkIcon");return o(),d("div",null,[u,m,h,g,e("ul",null,[e("li",null,[e("a",v,[n("网站"),i(l)]),n("（查找npm包、设置配置文件和管理npm体验的地方）")]),e("li",null,[n("用于发布和下载程序的"),e("a",_,[n("CLI"),i(l)]),n("（命令行界面）工具")]),e("li",null,[e("a",b,[n("注册表"),i(l)])])]),r(` 开发人员和npm的关系我们可以理解为：
<img src="@source/front-end/build/package-manage/image/npm.png" style="width: 80%; padding: 20px;"> `),k,x,f,j,e("ul",null,[R,e("li",null,[e("a",E,[n("查看全部"),i(l)])])]),y,e("ol",null,[N,e("li",null,[e("p",null,[e("a",q,[n("账号注册"),i(l)]),n("（如果没有需要注册，已经有账号则直接到第三步）")])]),w,P,T]),V])}const C=s(c,[["render",S],["__file","npm.html.vue"]]);export{C as default};
